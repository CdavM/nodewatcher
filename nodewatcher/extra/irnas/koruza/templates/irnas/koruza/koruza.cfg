server = {
    # Serial port for KORUZA device
    device = "{{ serial_port }}";
    # Serial port baudrate
    baudrate = 115200;
    # Path to UNIX socket used for communication with the server
    socket = "/var/run/koruza-controller.sock";
    # Hooks
    hooks = {
        # Called when the underlying device should be reset
        reset = "/etc/koruza/reset";
    };
};

client = {
    # Command that retrieves device status
    status_command = "A 0\n";
};

controller = {
    # Status refresh interval in seconds
    status_interval = 1s;
    # Define manual controller commands
    commands = {
    r = "A 0\n"; # print main output
        l = "A 1\n"; # toggle green laser output
        p = "A 2\n"; # reset position counter
        q = "A 3\n"; # store in flash
        up = "A 1 -5\n"; # move up
        down = "A 1 5\n"; # move down
        left = "A 0 -5\n"; # move left
        right = "A 0 5\n"; # move right
        f = "A 2 10\n"; # move SFP closer to lens
        d = "A 2 -10\n"; # move SFP away from lens
        i = "A 3 10\n"; # movement normal
        o = "A 3 100\n"; # movement long
        u = "A 3 2500\n"; # movement very long
        w = "A 4 \n"; # stop all movement

        # configurable values
        1 = "A 5 16\n"; # set link ID
        2 = "A 4 50\n"; # link distance

        # alignment algorithm
    };
};

collector = {
    # Path to log file for the collector
    log_file = "/tmp/koruza-collector.csv.gz";
    # Path to state file that can be directly output via nodewatcher
    state_file = "/tmp/koruza-collector.state";
    # Path to last state file.
    last_state_file = "/tmp/koruza-collector.last_state";
    last_state_json_file = "/tmp/koruza-collector.last_state.json";
    # Data collection interval
    poll_interval = 1000ms;
    # Output formatter
    output_formatter = {
        name = "environment.sensor%s.serial";
        value = "environment.sensor%s.temp";
    };
};

{% if peer_ip %}
callibrator = {
    # Host with callibration data
    host = "{{ peer_ip }}";
    # Re-callibration interval
    interval = 1s;
    # Callibration tokens
    tokens = {
        7 = "A 7 %s\n";
        22 = "A 8 %s\n";
    };
};
{% endif %}
